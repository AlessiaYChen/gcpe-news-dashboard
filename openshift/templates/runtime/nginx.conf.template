worker_processes  auto;

error_log  /var/log/nginx/error.log;
pid        /var/run/nginx.pid;

events {
    worker_connections  4096;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    server_tokens off;

    # logging rules
    geo $loggable {
        default 1;
        %RealIpFrom% 0;
    }

    # Use a w3c standard log format
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main if=$loggable;

    sendfile        on;
    keepalive_timeout  65;

    #real_ip module
    set_real_ip_from %RealIpFrom%;
    real_ip_recursive on;
    real_ip_header    X-Forwarded-For;

    server {
        listen       8080;
        server_name  localhost;
        underscores_in_headers on;
        ignore_invalid_headers off;

        # add in most common security headers
        add_header Content-Security-Policy "default-src * data: blob: filesystem: 'unsafe-inline' 'unsafe-eval'";
        add_header Strict-Transport-Security "max-age=86400; includeSubDomains";
        add_header X-Content-Type-Options "nosniff";
        # add_header X-XSS-Protection 1;
        add_header X-Frame-Options SAMEORIGIN;

        location /api {
            proxy_pass          %API_URL%;

            # propagate SMGOV_* headers
            proxy_set_header    SMGOV_USERGUID  $http_smgov_userguid;
            proxy_set_header    SMGOV_USERDISPLAYNAME  $http_smgov_userdisplayname;
            proxy_set_header    SMGOV_USERTYPE  $http_smgov_usertype;
            proxy_set_header    SMGOV_USERIDENTIFIER  $http_smgov_useridentifier;
        }

        # serve our app here
        location / {
            root   /tmp/app/dist;
            index  index.html index.htm;
            try_files $uri $uri/ /index.html;
            gzip            on;
            gzip_min_length 1000;
            gzip_types      *;

            sendfile off;
            expires -1;

            # propagate SMGOV_* headers
            add_header  SMGOV_USERGUID $http_smgov_userguid;
            add_header  SMGOV_USERDISPLAYNAME  $http_smgov_userdisplayname;
            add_header  SMGOV_USERTYPE  $http_smgov_usertype;
            add_header  SMGOV_USERIDENTIFIER  $http_smgov_useridentifier;

            # access-control-allow-origin settings
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin '*' always;
                add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
                #
                # Custom headers and headers various browsers *should* be OK with but aren't
                #
                add_header Access-Control-Allow-Headers 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
                #
                # Tell client that this pre-flight info is valid for 20 days
                #
                add_header Access-Control-Max-Age 1728000;
                add_header Content-Type 'text/plain; charset=utf-8';
                add_header Content-Length 0;
                return 204;
            }
            if ($request_method = 'POST') {
                add_header Access-Control-Allow-Origin '*' always;
                add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
                add_header Access-Control-Allow-Headers 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
                add_header Access-Control-Expose-Headers 'Content-Length,Content-Range';
            }
            if ($request_method = 'GET') {
                add_header Access-Control-Allow-Origin '*' always;
                add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
                add_header Access-Control-Allow-Headers 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
                add_header Access-Control-Expose-Headers 'Content-Length,Content-Range';
            }

        }

        # redirect server error pages to the static page /50x.html
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }

        # For status of ngnix service, OpenShift is configured to call this
        location /nginx_status {
            # Enable Nginx stats
            stub_status on;

            # Only allow access from localhost
            allow all;

            # Other request should be denied
            # deny all;

            # No need to log this request, its just noise
            access_log off;
        }

    }
}
